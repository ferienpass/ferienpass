<div class="bg-white shadow sm:rounded-lg">
    <div class="px-4 py-5 sm:p-6">
        <h3 class="text-lg leading-6 font-medium text-gray-900">Schnell-Erfassung Anmeldung</h3>
        <div class="mt-2 max-w-xl text-sm leading-5 text-gray-500">
            <p>Veranstaltung auswählen. Anmeldung erfassen.</p>
        </div>
        <div class="mt-5">
            {{ form_start(application) }}

            <div class="space-y-6" x-data="DashboardCreateAttendance()">

                {% do application.status.setRendered %}
                <input type="hidden"
                       id="{{ application.status.vars.id }}"
                       name="{{ application.status.vars.full_name }}"
                       :value="status"/>

                {% do application.offer.setRendered %}
                <input type="hidden"
                       :value="offer?.id"
                       id="{{ application.offer.vars.id }}"
                       name="{{ application.offer.vars.full_name }}"/>

                {% do application.participant.setRendered %}
                <input type="hidden"
                       :value="participant?.id"
                       id="{{ application.participant.vars.id }}"
                       name="{{ application.participant.vars.full_name }}"/>

                {# Offer select #}
                <div class="grid gap-6 md:grid-cols-3">
                    <div class="col-span-2" @value-changed="offer = $event.detail.data">

                        {# select field component #}
                        <div x-data="select({ name: 'offer', placeholder: 'Veranstaltung suchen…', emptyOptionsMessage: 'Veranstaltung nicht gefunden' })"
                             @click.away="closeListbox()"
                             @keydown.escape="closeListbox()"
                             class="relative"
                        >
                            <div class="inline-block w-full rounded-md shadow-sm">
                                <div x-ref="button"
                                     role="button"
                                     @click.prevent="toggleListboxVisibility()"
                                     :aria-expanded="open"
                                     aria-haspopup="listbox"
                                     class="relative z-0 w-full py-2 pl-3 pr-10 text-left transition duration-150 ease-in-out bg-white border border-gray-300 rounded-md cursor-default focus:outline-none focus:shadow-outline-blue focus:border-blue-300 sm:text-sm sm:leading-5"
                                >
                                    <span x-show="! open"
                                          x-text="value in options ? options[value].name : placeholder"
                                          :class="{ 'text-gray-500': ! (value in options) }"
                                          class="block truncate"
                                    ></span>

                                    <input x-ref="search"
                                           x-show="open"
                                           x-model="search"
                                           @keydown.enter.stop.prevent="selectOption()"
                                           @keydown.arrow-up.prevent="focusPreviousOption()"
                                           @keydown.arrow-down.prevent="focusNextOption()"
                                           type="search"
                                           class="w-full h-full focus:ring-0 focus:border-0 focus:outline-none px-0 py-0"
                                    />

                                    <span class="absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none">
                                        <svg class="w-5 h-5 text-gray-400" viewBox="0 0 20 20" fill="none"
                                             stroke="currentColor">
                                            <path d="M7 7l3-3 3 3m0 6l-3 3-3-3" stroke-width="1.5"
                                                  stroke-linecap="round"
                                                  stroke-linejoin="round"></path>
                                        </svg>
                                    </span>
                                </div>
                            </div>

                            <div x-show="open"
                                 x-transition:leave="transition ease-in duration-100"
                                 x-transition:leave-start="opacity-100"
                                 x-transition:leave-end="opacity-0"
                                 x-cloak
                                 class="absolute z-10 w-full mt-1 bg-white rounded-md shadow-lg"
                            >
                                <ul x-ref="listbox"
                                    @keydown.enter.stop.prevent="selectOption()"
                                    @keydown.arrow-up.prevent="focusPreviousOption()"
                                    @keydown.arrow-down.prevent="focusNextOption()"
                                    role="listbox"
                                    :aria-activedescendant="focusedOptionIndex ? name + 'Option' + focusedOptionIndex : null"
                                    tabindex="-1"
                                    class="py-1 overflow-auto text-base leading-6 rounded-md shadow-xs max-h-60 focus:outline-none sm:text-sm sm:leading-5"
                                >
                                    <template x-for="(key, index) in Object.keys(options)" :key="index">
                                        <li :id="name + 'Option' + focusedOptionIndex"
                                            @click="selectOption()"
                                            @mouseenter="focusedOptionIndex = index"
                                            @mouseleave="focusedOptionIndex = null"
                                            role="option"
                                            :aria-selected="focusedOptionIndex === index"
                                            :class="{ 'text-white bg-primary-600': index === focusedOptionIndex, 'text-gray-900': index !== focusedOptionIndex }"
                                            class="relative py-2 pl-3 text-gray-900 cursor-default select-none pr-9"
                                        >
                                            <span class="block truncate">
                                                <span class="block">
                                                    <span class="font-medium" x-text="options[key]?.name"></span>
                                                    (<span x-text="options[key]?.hosts"></span>)
                                                </span>
                                                <span class="block" x-text="options[key]?.date"></span>
                                                <span class="flex items-center">
                                                    <span class="w-2 h-2 rounded-full inline-block mr-1"
                                                          :class="{ 'bg-red-600': options[key]?.current >= options[key]?.maxParticipants, 'bg-green-600': options[key]?.current < options[key]?.maxParticipants}"></span>
                                                    <span x-text="options[key]?.current ?? '0'"></span><span>&nbsp;/&nbsp;</span><span
                                                            x-text="options[key]?.maxParticipants ?? '-'"></span>&nbsp;TN
                                                </span>
                                            </span>

                                            <span x-show="key === value"
                                                  :class="{ 'text-white': index === focusedOptionIndex, 'text-primary-600': index !== focusedOptionIndex }"
                                                  class="absolute inset-y-0 right-0 flex items-center pr-4 text-primary-600"
                                            >
                                                <svg class="w-5 h-5" viewBox="0 0 20 20" fill="currentColor">
                                                    <path fill-rule="evenodd"
                                                          d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                                                          clip-rule="evenodd"/>
                                                </svg>
                                            </span>
                                        </li>
                                    </template>

                                    <div x-show="! Object.keys(options).length"
                                         x-text="emptyOptionsMessage"
                                         class="px-3 py-2 text-gray-900 cursor-default select-none"></div>
                                </ul>
                            </div>
                        </div>


                    </div>
                    <div class="py-0.5">
                        <template x-if="offer">
                            <div>
                                <h4 class="truncate text-gray-900 font-medium leading-5"
                                    x-text="offer.name"></h4>
                                <p class="text-sm text-gray-500 leading-3" x-text="offer.hosts"></p>
                                <p class="mt-3 text-sm text-gray-900 font-medium leading-3"
                                   x-text="offer.date"></p>
                                <p class="mt-1 text-sm text-gray-500 leading-4">min: <span
                                            x-text="offer.minAge ?? '-'"></span> / max: <span
                                            x-text="offer.maxAge ?? '-'"></span> Jahre</p>
                                <p class="mt-1 flex justify-between">
                                    <span class="text-sm text-gray-500 leading-4">min: <span
                                                x-text="offer.minParticipants ?? '-'"></span> / max: <span
                                                x-text="offer.maxParticipants ?? '-'"></span> TN</span>
                                    <span>
                                        <span x-text="offer.confirmed"
                                              class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-green-100 text-green-800"></span>
                                        <span x-text="offer.waitlisted"
                                              class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-yellow-100 text-yellow-800"></span>
                                        <span x-text="offer.waiting"
                                              class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-gray-100 text-gray-800"></span>
                                    </span>
                                </p>
                            </div>
                        </template>
                    </div>
                </div>

                {# Participant select #}
                <template x-if="offer">
                    <div class="grid gap-6 md:grid-cols-3">
                        <div class="col-span-2" @value-changed="participant = $event.detail.data">

                            {# select field component #}
                            <div x-data="select({ data: {}, name: 'participant', placeholder: 'Teilnehmer:in suchen…', emptyOptionsMessage: 'Neue Teilnehmer:in mit Enter bestätigen' })"
                                 @click.away="closeListbox()"
                                 @keydown.escape="closeListbox()"
                                 class="mt-4 relative"
                            >

                                <div class="inline-block w-full rounded-md shadow-sm">
                                    <div x-ref="button"
                                         role="button"
                                         @click.prevent="toggleListboxVisibility()"
                                         :aria-expanded="open"
                                         aria-haspopup="listbox"
                                         class="relative z-0 w-full py-2 pl-3 pr-10 text-left transition duration-150 ease-in-out bg-white border border-gray-300 rounded-md cursor-default focus:outline-none focus:shadow-outline-blue focus:border-blue-300 sm:text-sm sm:leading-5"
                                    >
                                        <span x-show="! open"
                                              x-text="value in options ? options[value].firstname + ' '+options[value].lastname : placeholder"
                                              :class="{ 'text-gray-500': ! (value in options) }"
                                              class="block truncate"
                                        ></span>

                                        <input x-ref="search"
                                               x-show="open"
                                               x-model="search"
                                               @keydown.enter.stop.prevent="selectOption()"
                                               @keydown.arrow-up.prevent="focusPreviousOption()"
                                               @keydown.arrow-down.prevent="focusNextOption()"
                                               type="search"
                                               class="w-full h-full focus:ring-0 focus:border-0 focus:outline-none px-0 py-0"
                                        />

                                        <span class="absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none">
                                            <svg class="w-5 h-5 text-gray-400" viewBox="0 0 20 20" fill="none"
                                                 stroke="currentColor">
                                                <path d="M7 7l3-3 3 3m0 6l-3 3-3-3" stroke-width="1.5"
                                                      stroke-linecap="round"
                                                      stroke-linejoin="round"></path>
                                            </svg>
                                        </span>
                                    </div>
                                </div>

                                <div x-show="open"
                                     x-transition:leave="transition ease-in duration-100"
                                     x-transition:leave-start="opacity-100"
                                     x-transition:leave-end="opacity-0"
                                     x-cloak
                                     class="absolute z-10 w-full mt-1 bg-white rounded-md shadow-lg"
                                >
                                    <ul x-ref="listbox"
                                        @keydown.enter.stop.prevent="selectOption()"
                                        @keydown.arrow-up.prevent="focusPreviousOption()"
                                        @keydown.arrow-down.prevent="focusNextOption()"
                                        role="listbox"
                                        :aria-activedescendant="focusedOptionIndex ? name + 'Option' + focusedOptionIndex : null"
                                        tabindex="-1"
                                        class="py-1 overflow-auto text-base leading-6 rounded-md shadow-xs max-h-60 focus:outline-none sm:text-sm sm:leading-5"
                                    >
                                        <template x-for="(key, index) in Object.keys(options)" :key="index">
                                            <li :id="name + 'Option' + focusedOptionIndex"
                                                @click="selectOption()"
                                                @mouseenter="focusedOptionIndex = index"
                                                @mouseleave="focusedOptionIndex = null"
                                                role="option"
                                                :aria-selected="focusedOptionIndex === index"
                                                :class="{ 'text-white bg-primary-600': index === focusedOptionIndex, 'text-gray-900': index !== focusedOptionIndex }"
                                                class="relative py-2 pl-3 text-gray-900 cursor-default select-none pr-9"
                                            >
                                                <span class="block truncate">
                                                    <span class="block font-medium"><span
                                                                x-text="options[key]?.firstname"></span> <span
                                                                x-text="options[key]?.lastname"></span></span>
                                                    <span class="block"><span x-text="options[key]?.dateOfBirth"></span>
                                                        (<span x-text="options[key]?.age"></span> Jahre)</span>
                                                </span>

                                                <span x-show="key === value"
                                                      :class="{ 'text-white': index === focusedOptionIndex, 'text-primary-600': index !== focusedOptionIndex }"
                                                      class="absolute inset-y-0 right-0 flex items-center pr-4 text-primary-600"
                                                >
                                                    <svg class="w-5 h-5" viewBox="0 0 20 20" fill="currentColor">
                                                        <path fill-rule="evenodd"
                                                              d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                                                              clip-rule="evenodd"/>
                                                    </svg>
                                                </span>
                                            </li>
                                        </template>

                                        <div x-show="! Object.keys(options).length"
                                             x-text="emptyOptionsMessage"
                                             class="px-3 py-2 text-gray-900 cursor-default select-none"></div>
                                    </ul>
                                </div>

                            </div>


                        </div>
                        <div class="py-0.5">
                            <template x-if="participant">
                                <div>
                                    <h4 class="truncate text-gray-900 font-medium leading-5"
                                        x-text="participant.firstname +' '+ participant.lastname"></h4>
                                    <p class="text-sm text-gray-500 leading-3"
                                       x-text="'geb. '+participant.dateOfBirth + ' ('+participant.age+' Jahre)'"></p>
                                    <template
                                            x-if="(offer.minAge && participant.age < offer.minAge) || (offer.maxAge && participant.age > offer.maxAge)">
                                        <p class="text-red-600 font-medium text-sm">Achtung Alter!</p>
                                    </template>
                                </div>
                            </template>
                        </div>
                    </div>
                </template>

                {# Participant form #}
                <div x-ref="newParticipant">
                    <template x-if="participant === false">
                        <div class="grid grid-cols-3 gap-4">
                            {{ form_row(application.firstname) }}
                            {{ form_row(application.lastname) }}
                            {{ form_row(application.dateOfBirth) }}
                            {{ form_row(application.phone) }}
                            {{ form_row(application.mobile) }}
                            {{ form_row(application.email) }}
                        </div>
                    </template>
                </div>

                {# Status #}
                <template x-if="participant === false || null !== participant">
                    <div>
                        <label class="text-gray-700 font-medium text-sm">Anmeldestatus</label>
                        <div class="mt-1 flex space-x-3">
                            <button type="button"
                                    @click="status='confirmed'"
                                    :class="{'bg-green-100 ring-green-600 ring-2': 'confirmed' === status}"
                                    class="focus:outline-none inline-flex items-center px-2.5 py-0.5 rounded-md text-sm font-medium bg-green-50 hover:bg-green-100 text-green-800">
                                angemeldet
                            </button>
                            <button type="button"
                                    :class="{'bg-yellow-100 ring-yellow-600 ring-2': 'waitlisted' === status}"
                                    @click="status='waitlisted'"
                                    class="focus:outline-none inline-flex items-center px-2.5 py-0.5 rounded-md text-sm font-medium bg-yellow-50 hover:bg-yellow-100 text-yellow-800">
                                Warteliste
                            </button>
                            <button type="button"
                                    @click="status='waiting'"
                                    :class="{'bg-gray-100 ring-gray-500 ring-2': 'waiting' === status}"
                                    class="focus:outline-none inline-flex items-center px-2.5 py-0.5 rounded-md text-sm font-medium bg-gray-50 hover:bg-gray-100 text-gray-800">
                                wartend
                            </button>
                        </div>
                    </div>
                </template>

                {# Notify and submit #}
                <template x-if="participant === false || null !== participant">
                    <div>
                        {{ form_row(application.notify) }}
                        {{ form_row(application.submit) }}
                    </div>
                </template>

                {{ form_end(application) }}
            </div>
        </div>

        <script>
            function DashboardCreateAttendance() {
                return {
                    offer: null,
                    participant: null,
                    status: 'waiting',
                    init: function () {
                        this.$watch('participant', () => fetch(`/admin/api/create_attendance/status/${this.offer?.id}`)
                            .then(response => response.json())
                            .then(data => this.status = (data.status) ? data.status : this.status)
                            .catch())
                    },
                }
            }

            function select(config) {
                return {
                    emptyOptionsMessage: config.emptyOptionsMessage ?? 'Nichts gefunden.',
                    focusedOptionIndex: null,
                    name: config.name,
                    open: false,
                    options: {},
                    placeholder: config.placeholder ?? 'Suchen…',
                    search: '',
                    value: config.value,

                    closeListbox: function () {
                        this.open = false
                        this.focusedOptionIndex = null
                        this.search = ''
                    },

                    focusNextOption: function () {
                        if (this.focusedOptionIndex === null) return this.focusedOptionIndex = Object.keys(this.options).length - 1

                        if (this.focusedOptionIndex + 1 >= Object.keys(this.options).length) return

                        this.focusedOptionIndex++
                        this.$refs.listbox.children[this.focusedOptionIndex].scrollIntoView({block: "center",})
                    },

                    focusPreviousOption: function () {
                        if (this.focusedOptionIndex === null) return this.focusedOptionIndex = 0

                        if (this.focusedOptionIndex <= 0) return

                        this.focusedOptionIndex--
                        this.$refs.listbox.children[this.focusedOptionIndex].scrollIntoView({block: "center"})
                    },

                    init: function () {
                        if (!(this.value in this.options)) this.value = null

                        this.$watch('search', ((value) => {
                            fetch(`/admin/api/create_attendance/${this.name}s?q=${value.toLowerCase()}`)
                                .then(response => response.json())
                                .then(data => this.options = data);
                        }))

                        this.$watch('value', ((value) => {
                            this.$el.parentNode.dispatchEvent(new CustomEvent('value-changed', {
                                detail: {data: Object.values(this.options)[value]}
                            }));
                        }))
                    },

                    selectOption: function () {
                        if (!this.open) return this.toggleListboxVisibility()
                        if (!this.options.length) {
                            this.participant = false;

                            setTimeout(() => [this.$refs.newParticipant.getElementsByTagName('input')[0].value, this.$refs.newParticipant.getElementsByTagName('input')[1].value] = this.search.split(' ', 2));

                            this.closeListbox();
                            return;
                        }
                        this.value = Object.keys(this.options)[this.focusedOptionIndex]
                        this.closeListbox()
                    },

                    toggleListboxVisibility: function () {
                        if (this.open) return this.closeListbox()
                        this.focusedOptionIndex = Object.keys(this.options).indexOf(this.value)
                        if (this.focusedOptionIndex < 0) this.focusedOptionIndex = 0
                        this.open = true

                        this.$nextTick(() => {
                            this.$refs.search.focus()

                            this.$refs.listbox.children[this.focusedOptionIndex].scrollIntoView({block: "nearest"})
                        })
                    },
                }
            }
        </script>
    </div>
</div>
